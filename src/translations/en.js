export const en = {
  // Navigation
  overview: "Overview",
  transactions: "Transactions",
  addTransaction: "Add Transaction",
  dataManagement: "Data Management",
  budgetSetup: "Budget Setup",
  importTransactions: "Import Transactions",
  importTransactionsTitle: "📥 Import Transactions",
  reconciliation: "Reconciliation",
  todo: "TODO",
  stressTest: "Stress Test",
  settings: "Settings",
  reports: "Reports",
  importExport: "Import/Export",
  about: "About",

  // Budget Setup
  budgetConfiguration: "Budget Configuration",
  createNewBudget: "Create New Budget",
  createNewBudgetDesc: "Start fresh with a new budget plan",
  modifyExistingBudget: "Modify Existing Budget", 
  modifyExistingBudgetDesc: "Edit an existing budget",
  budgetName: "Budget Name",
  enterBudgetName: "Enter budget name",
  budgetNameRequired: "Budget name is required",
  budgetNameExists: "A budget with this name already exists",
  budgetLineItems: "Budget Line Items",
  selectSubcategory: "Select Subcategory",
  subcategoryAlreadyExists: "This subcategory is already in the budget",
  weekly: "Weekly",
  monthly: "Monthly",
  quarterly: "Quarterly", 
  yearly: "Yearly",
  percentage: "% of Budget",
  totalBudget: "Total Budget",
  draft: "Draft",
  active: "Active",
  inactive: "Inactive",
  annualProjection: "Annual Projection",
  saveAsDraft: "Save as Draft",
  saveAndActivate: "Save & Activate",
  budgetSaved: "Budget saved successfully",
  errorSavingBudget: "Error saving budget. Please try again.",
  unsavedChanges: "You have unsaved changes",
  unsavedChangesWarning: "You have unsaved changes. Are you sure you want to continue?",
  remove: "Remove",
  add: "Add",
  continue: "Continue",
  back: "Back",

  // Database Setup
  welcomeTitle: "Welcome to your Personal Finance Tracker",
  welcomeSubtitle: "Initialize your personal finance database to begin managing your money",
  
  // Action Cards
  startNewPersonal: "Start New Personal Finances",
  startNewPersonalDesc: "Create a fresh personal finance database with standard accounts and sample data",
  importExistingData: "Import Existing Data",
  importExistingDataDesc: "Connect to an existing personal finance database folder with your historical records",
  
  // Features
  preConfigured: "Pre-configured account structure",
  personalStandard: "Personal finance standard classifications",
  readyToUse: "Ready for immediate use",
  preserveData: "Preserve historical data",
  continueWorkflows: "Continue existing workflows",
  maintainIntegrity: "Maintain data integrity",
  
  // Buttons
  createNewDatabase: "Create New Database",
  selectDatabaseFolder: "Select Database Folder",
  cancel: "Cancel",
  
  // Data Management
  dataManagementTitle: "Data Management",
  dataManagementSubtitle: "Manage your accounting data",
  accounts: "Accounts",
  products: "Tags",
  categories: "Transaction Types",
  subcategories: "Transaction Categories",
  transaction_types: "Transaction Types",
  transaction_groups: "Transaction Groups",
  
  // Forms
  accountName: "Account Name",
  accountType: "Account Type",
  initialBalance: "Initial Balance",
  includeInOverview: "Include in Overview page totals",
  selectType: "Select Type",
  email: "Email",
  phone: "Phone",
  address: "Address",
  description: "Description",
  category: "Transaction Type",
  subcategory: "Category",
  categoryName: "Transaction Type Name",
  subcategoryName: "Category Name",
  transactionGroupName: "Transaction Group Name",
  transactionGroup: "Transaction Group",
  defaultAccount: "Default Account",
  destinationAccount: "Destination Account",
  selectDefaultAccount: "Select Default Account",
  selectDestinationAccount: "Select Destination Account",
  selectCategory: "Select Transaction Type",
  selectSubcategory: "Select Category",
  selectTransactionGroup: "Select Transaction Group",
  icon: "Icon",
  color: "Color",
  amount: "Amount",
  date: "Date",
  selectAccount: "Select Account",
  
  // Account Types
  asset: "Asset",
  liability: "Liability",
  equity: "Equity",
  income: "Income",
  expense: "Expense",
  
  // Actions
  add: "Add",
  edit: "Edit",
  update: "Update",
  addAccount: "Add Account",
  updateAccount: "Update Account",
  addTransactionButton: "Add Transaction",
  updateTransaction: "Update Transaction",
  addCategory: "Add Transaction Type",
  updateCategory: "Update Transaction Type",
  addSubcategory: "Add Category",
  updateSubcategory: "Update Category",
  addTransactionGroup: "Add Transaction Group",
  updateTransactionGroup: "Update Transaction Group",
  
  // Table Headers
  id: "ID",
  name: "Name",
  type: "Type",
  balance: "Balance",
  contact: "Contact",
  price: "Price",
  actions: "Actions",
  
  // Messages
  noDataFound: "found. Add some data to get started.",
  loadingSystem: "Loading accounting system...",
  
  // Overview
  recentTransactions: "Recent Transactions",
  allTransactions: "All Transactions",
  addNewTransaction: "Add New Transaction",
  
  // Language
  language: "Language",
  english: "English",
  french: "Français",
  
  // Account Summary
  totalAssets: "Total Assets",
  totalIncome: "Total Income", 
  totalExpenses: "Total Expenses",
  totalLiabilities: "Total Liabilities",
  netIncome: "Net Income",
  retirement: "Retirement",
  accountBalances: "Account Balances",
  accountsCount: "accounts",
  transactionsCount: "transactions",
  productsServicesCount: "Tags",
  more: "more",
  
  // Transaction Form
  selectDebitAccount: "Select debit account...",
  selectCreditAccount: "Select credit account...",
  required: "Required",
  debitAccount: "Debit Account (From)",
  creditAccount: "Credit Account (To)",
  reference: "Reference",
  notes: "Notes",
  productService: "Tag",
  selectProductService: "Select tag...",
  enterDescription: "Enter transaction description...",
  referencePlaceholder: "Invoice #, Check #, etc.",
  notesPlaceholder: "Additional notes about this transaction...",
  doubleEntryTitle: "Relational Double-Entry System",
  debitExplanation: "The account that will be increased (for assets/expenses) or decreased (for liabilities/income)",
  creditExplanation: "The account that will be decreased (for assets/expenses) or increased (for liabilities/income)",
  foreignKeysExplanation: "Optionally link transactions to items for detailed tracking",
  saving: "Saving...",
  addTransactionBtn: "Add Transaction",
  fillAllFields: "Please fill in all fields",
  differentAccounts: "Debit and credit accounts must be different",
  amountGreaterZero: "Amount must be greater than 0",
  errorAddingTransaction: "Error adding transaction:",
  
  // Transaction List
  recentTransactionsTitle: "Recent Transactions",
  allTransactionsTitle: "All Transactions",
  noTransactionsFound: "No transactions found",
  noTransactionsYet: "No transactions yet",
  addFirstTransaction: "Add your first transaction to get started!",
  debit: "Debit",
  credit: "Credit",
  unknownAccount: "Unknown Account",
  showingLastTransactions: "Showing last",
  totalTransactions: "transactions. Total:",
  
  // Common
  loading: "Loading...",
  error: "Error",
  success: "Success",
  total: "Total",
  
  // Common UI Elements
  type: "Type",
  account: "Account",
  reference: "Reference",
  actions: "Actions",
  date: "Date",
  select: "Select",
  status: "Status",
  age: "Age",
  notAvailable: "Not Available",
  required: "Required",
  optional: "Optional",
  primaryKey: "Primary Key",
  foreignKey: "Foreign Key",
  transactionDetails: "Transaction Details",
  recognitionPreview: "Recognition Preview",
  noCurrenciesAvailable: "No currencies available",
  noBankConfigurations: "No Banks Configured",
  configureBankFirst: "You need to configure at least one bank before importing transactions.",
  
  // Import Transactions & Bank Configuration  
  importHistory: "Import History",
  bankConfigurations: "Bank Configurations", 
  addBankConfiguration: "Add Bank Configuration",
  editBankConfiguration: "Edit Bank Configuration",
  bankName: "Bank Name",
  bankTypeExample: "e.g., Major US Bank, Credit Union",
  enterBankName: "Enter bank name",
  selectBankConfiguration: "Select Bank Configuration",
  bankConfigurationDesc: "Choose your bank configuration to import CSV transactions",
  addFirstBank: "Add your first bank configuration to start importing transactions.",
  addYourFirstBank: "Add Your First Bank",
  confirmDeleteBank: "Are you sure you want to delete this bank configuration?",
  configureBanks: "Configure Banks",
  customConfiguration: "Custom Configuration",
  fieldMapping: "Field Mapping",
  fieldsMapped: "fields mapped",
  notMapped: "Not mapped",
  mappedTo: "Mapped to:",

  // CSV Processing
  csvDelimiter: "CSV Delimiter",
  csvHeaders: "CSV Headers", 
  csvPreview: "CSV Preview:",
  detectedColumns: "Detected columns:",
  dateFormat: "Date Format",
  defaultCurrency: "Default Currency",
  delimiter: "Delimiter",
  comma: "Comma (,)",
  semicolon: "Semicolon (;)",
  tab: "Tab",
  pipe: "Pipe (|)",
  amountHandling: "Amount Handling",
  singleSignedColumn: "Single signed amount column",
  separateDebitCredit: "Separate debit/credit columns",

  // Field Types
  dateField: "Date Field",
  descriptionField: "Description Field", 
  amountField: "Amount Field",
  debitField: "Debit Field",
  creditField: "Credit Field",
  referenceField: "Reference Field",
  accountNumber: "Account number or name",
  destinationAccountField: "Destination account for transfers/investments",
  destinationAmountField: "Amount for destination account (investments)",
  transactionTypeField: "Transaction type (Income, Expenses, Transfer, etc.)",
  transactionGroupField: "Transaction group within type",
  categoryField: "Transaction category (legacy)",
  subcategoryField: "Transaction subcategory",
  payeeField: "Payee name (for expenses/investments)",
  payerField: "Payer name (for income/investments)",
  tagField: "Transaction tag",
  notesField: "Additional transaction notes",

  // Import Processing Steps
  stepOne: "Step 1",
  stepTwo: "Step 2",
  step1ChooseBankType: "Step 1: Choose Bank Type",
  step2BasicInformation: "Step 2: Basic Information",
  step3CsvSample: "Step 3: CSV Sample",
  step4FieldMapping: "Step 4: Field Mapping",
  selectPresetOrCustom: "Select a preset bank or choose custom",
  configureParsingSettings: "Configure parsing settings and upload a sample CSV file",
  totalMapped: "Total Mapped:",
  requiredMapped: "Required Mapped:",
  updateConfiguration: "Update Configuration",
  saveConfiguration: "Save Configuration",
  selectYourBank: "Select Your Bank",
  chooseBankConfig: "Choose the bank configuration to use for importing your transactions.",
  uploadYourFiles: "Upload Your Files",
  uploadFromBank: "Upload CSV files from",
  expectedFormat: "Expected Format",
  goToSettings: "Go to Settings",

  // File Processing
  uploadCsvFiles: "Upload CSV Files",
  dragDropFiles: "Drag and drop CSV files here or",
  browseFiles: "browse",
  supportedFormats: "Supported formats: .csv",
  fileSelected: "file selected",
  filesSelected: "files selected",
  dropFilesHere: "Drop files here",
  parseFiles: "Parse Files",
  processFiles: "Process Files",
  processing: "Processing...",
  processingFiles: "Processing files",
  parsingComplete: "Parsing complete",
  transactionsFound: "transactions found",
  backToUpload: "Back to upload",
  startOver: "Start Over",

  // Duplicate Detection & Import Progress
  duplicateDetection: "Duplicate Detection",
  duplicatesFound: "duplicates detected",
  skipDuplicates: "Skip duplicates",
  importAll: "Import all",
  importProgress: "Import Progress",
  importing: "Importing...",
  importingTransactions: "Importing transactions...",
  importReady: "Ready to Import",
  importSelectedTransactions: "Import {count} Selected Transactions",

  // Review Queue
  reviewQueue: "Review Queue",
  transactionReview: "Transaction Review",
  backToImport: "Back to Import",
  resetImport: "Reset Import",
  reviewTransactions: "Review Transactions",
  reviewAndApprove: "Review and approve {count} parsed transactions before importing",
  file: "File:",
  progressText: "Importing... {progress}%",

  // Hamburger Menu
  testDashboard: "Test Dashboard",
  
  // Reconciliation System
  existingReconciliations: "Existing Reconciliations",
  bankReconciliation: "Bank Reconciliation",
  reconciliationTitle: "Reconciliation",
  reconciliationSetup: "Reconciliation Setup",
  reconciliationProcess: "Reconciliation Process",
  startReconciliation: "Start Reconciliation",
  completeReconciliation: "Complete Reconciliation",
  cancelReconciliation: "Cancel Reconciliation",
  reconciliationComplete: "Reconciliation complete",
  reconciliationCancelled: "Reconciliation cancelled",

  // Reconciliation Configuration
  step1SetupReconciliation: "Step 1: Setup Reconciliation",
  enterReconciliationReference: "Enter reconciliation reference and your bank statement total amount",
  selectAccountToReconcile: "Select the account you want to reconcile",
  chooseAccountToReconcile: "Choose the account you want to reconcile",
  reconciliationReference: "Reconciliation Reference",
  reconciliationReferenceRequired: "Reconciliation reference is required",
  enterReference: "Enter reference",
  referenceExample: "e.g.: R012024",
  generateReferenceCurrentMonth: "Generate reference for current month",
  generate: "Generate",
  referenceAttachedToTransactions: "This reference will be attached to all reconciled transactions",
  enterStatementTotal: "Enter statement total",
  totalAmountOnBankStatement: "Total amount shown on your bank statement",
  bankStatementTotal: "Bank Statement Total",
  validBankStatementTotalRequired: "A valid bank statement total is required",
  statementEndingBalance: "Statement ending balance",
  selectAccountFirst: "Please select an account first before generating a reference.",
  selectedAccountNotFound: "Selected account not found.",

  // Reconciliation Process & Summary
  step2Reconciliation: "Step 2. Reconciliation:",
  accountBalance: "Account Balance",
  selectedTotal: "Selected Total",
  selectedTransactions: "Selected Transactions",
  numberOfSelectedTransactions: "Number of Selected Transactions",
  difference: "Difference",
  transactionSelection: "Transaction Selection",
  selectTransactionsToReconcile: "Select transactions to reconcile",
  balancedReconciliation: "Balanced reconciliation",
  unbalancedReconciliation: "Unbalanced reconciliation",
  reconciliationSummary: "Reconciliation Summary",
  transactionCount: "Transaction count",
  proceedWithReconciliation: "Proceed with reconciliation",
  selectAtLeastOneTransaction: "Select at least one transaction to complete reconciliation",
  completeReconciliation: "Complete reconciliation",
  reset: "Reset",
  complete: "Complete",

  // Transaction Status & Management
  reconciledTransactions: "Reconciled Transactions",
  unreconciledTransactions: "Unreconciled Transactions",
  reconciledStatus: "Status: Reconciled",
  unreconciledStatus: "Status: Unreconciled",
  reconciliationRef: "Reconciliation Ref",
  reconciledDate: "Reconciled date",
  unReconcile: "Unreconcile",
  unreconcileSelected: "Unreconcile selected",
  unreconcileComplete: "Unreconciliation completed successfully",
  selectTransactionsToUnreconcile: "Please select transactions to unreconcile.",
  confirmUnreconcile: "Are you sure you want to unreconcile",
  transactionSingular: "transaction",
  transactionPlural: "transactions",
  thisWillRemoveReconciliation: "This will remove their reconciliation reference.",

  // Reconciliation Views & Filters
  viewExistingReconciliations: "View Existing Reconciliations",
  showExistingReconciliations: "Show Existing Reconciliations",
  hideReconciled: "Hide reconciled",
  showReconciled: "Show reconciled", 
  showAll: "Show all",
  backToReconciliation: "← Back to Reconciliation",
  noReconciledTransactions: "No reconciled transactions found with current filters.",

  // Reconciliation Instructions
  howReconciliationWorks: "How Reconciliation Works",
  setupStep: "Setup",
  enterReferenceAndTotal: "Enter a reference (e.g., DA2501) and your bank statement total",
  selectStep: "Select",
  filterAndTickTransactions: "Filter and tick transactions that appear on your bank statement",
  matchStep: "Match",
  compareRunningTotalWithBank: "Compare your running total with the bank statement total",
  completeStep: "Complete",
  whenTotalsMatchComplete: "When totals match, your reconciliation is complete",

  // General Requirements & Validation
  allFieldsRequired: "All fields are required",
  pleaseSelectTransactions: "Please select transactions",

  // Navigation
  backToMain: "Back to Main",
  backToSetup: "Back to Setup",
  
  // Processing Rules System
  processingRulesOptional: "Processing Rules (Optional)",
  createRulesToProcess: "Create rules to automatically process transactions during import",
  addNewRule: "Add New Rule",
  addNewProcessingRule: "Add new processing rule",
  saveConfigFirst: "Save bank configuration first to add rules",
  loadingRules: "Loading rules...",
  noProcessingRulesYet: "No processing rules yet",
  addRulesToAutomatically: "Add rules to automatically categorize transactions, transform field values, or filter rows during import.",
  createYourFirstRule: "Create Your First Rule",
  saveConfigFirstToAdd: "Save bank configuration first to add processing rules.",
  totalRules: "Total Rules:",
  active: "Active:",
  inactive: "Inactive:",

  // Rule Creation & Management
  createProcessingRule: "Create Processing Rule",
  editProcessingRule: "Edit Processing Rule",
  ruleName: "Rule Name",
  ruleNameRequired: "Rule name is required",
  convertNegativeAmounts: "e.g., Convert negative amounts to positive",
  executionOrder: "Execution Order",
  lowerNumbersFirst: "Lower numbers execute first",
  ruleIsActive: "Rule is active",
  updateRule: "Update Rule",
  createRule: "Create Rule",
  failedToSaveRule: "Failed to save rule. Please try again.",

  // Rule Conditions & Actions
  atLeastOneCondition: "At least one condition is required",
  fieldIsRequired: "Field is required",
  operatorIsRequired: "Operator is required",
  valueIsRequired: "Value is required",
  atLeastOneAction: "At least one action is required",
  transformFunctionRequired: "Transform function is required",
  parameterRequiredForTransform: "Parameter is required for this transform",

  // Rule Item Display & Management
  order: "Order:",
  when: "When:",
  then: "Then:",
  conditions: "Conditions",
  actions: "Actions",
  noConditions: "No conditions",
  noActions: "No actions",
  noConditionsDefined: "No conditions defined",
  noActionsDefined: "No actions defined",
  caseInsensitive: "(case insensitive)",

  // Rule Actions & Transforms
  transformField: "Transform Field",
  setFieldValue: "Set Field Value",
  ignoreRow: "Ignore Row",
  set: "Set",
  to: "to",
  transform: "Transform",
  using: "using",

  // Rule Status & Controls
  deactivateRule: "Deactivate rule",
  activateRule: "Activate rule",
  disable: "Disable",
  enable: "Enable",
  editRule: "Edit rule",
  deleteRule: "Delete rule",
  collapse: "Collapse",
  expand: "Expand",
  created: "Created:",
  updated: "Updated:",
  areYouSureDelete: "Are you sure you want to delete this rule?",

  // Rule Processing Results
  ruleProcessingStats: "Rule processing stats",
  rulesApplied: "Rules Applied:",
  rulesAppliedCount: "rules applied",
  transactionsModified: "transactions modified",
  rule: "rule",
  rules: "rules",
  applied: "applied",
  appliedPlural: "applied",
  processed: "Processed:",
  skipped: "Skipped:",

  // Recent Databases
  recentDatabases: "Recent Databases",
  noRecentDatabases: "No recent databases found",
  quickAccess: "Quick access to your recently opened databases",
  loadDatabase: "Load Database",
  lastOpened: "Last opened",

  // Transaction Management & Editing
  editTransaction: "Edit Transaction",
  pleaseFix: "Please fix the following errors:",
  dateRequired: "Date is required",
  descriptionRequired: "Description is required",
  validAmountRequired: "A valid amount is required",
  transactionCategoryRequired: "Transaction category is required",
  transactionTypeRequired: "Transaction type is required",
  transactionGroupRequired: "Transaction group is required",
  accountRequired: "Account is required",
  destinationAccountRequired: "Destination account is required",
  destinationAmountRequired: "Destination amount is required",
  payeeRequired: "Payee is required",
  payerRequired: "Payer is required",

  // Form Fields & Labels
  selectDate: "Select date",
  transactionType: "Transaction Type",
  selectTransactionTypeFirst: "Select transaction type first",
  transactionGroup: "Transaction Group",
  selectTransactionGroupFirst: "Select transaction group first",
  transactionCategory: "Transaction Category",
  destinationAmount: "Destination Amount",
  payee: "Payee",
  payer: "Payer",
  tag: "Tag",
  saveChanges: "Save Changes",

  // Transaction Details & Display
  transactionAmount: "Transaction amount (signed)",
  transactionDate: "Transaction date", 
  transactionDescription: "Transaction/memo description",
  transactionReference: "Transaction ID/reference",
  transaction: "Transaction:",

  // Validation Messages
  missingOrInvalidDate: "Missing or invalid date",
  missingDescription: "Missing description",
  invalidAmount: "Invalid amount",
  missingTransactionCategory: "Missing transaction category",
  missingTransactionType: "Missing transaction type",
  missingTransactionGroup: "Missing transaction group",
  payeeRequiredForExpenses: "Payee is required for expenses",
  payerRequiredForIncome: "Payer is required for income",

  // Error Types & Status
  error: "Error",
  duplicate: "Duplicate", 
  needsAttention: "Needs Attention",
  ready: "Ready",
  warning: "Warning:",
  duplicates: "Duplicates:",
  
  // Test Dashboard System
  totalTests: "Total Tests",
  passed: "Passed",
  failed: "Failed",
  running: "Running",
  showAllTests: "Show All Tests",
  showFailedOnly: "Show Failed Only",
  exportFailed: "Export Failed",
  refreshList: "Refresh List",
  runAllTests: "Run All Tests",
  refreshing: "Refreshing...",
  runningAllTests: "Running all tests...",

  // Test Categorization & Filtering
  allCategories: "All Categories",
  tests: "tests",
  allSuites: "All Suites",
  suites: "suites",
  suite: "Suite",
  testName: "Test Name",
  expected: "Expected",
  duration: "Duration",
  lastRun: "Last Run",
  runTest: "Run test",

  // Test Analysis & Results
  failedTestsAnalysisRequest: "Failed Tests Analysis Request",
  context: "Context",
  filtersApplied: "Filters Applied",
  all: "All",
  failedOnly: "Failed Only",
  failedTestsData: "Failed Tests Data",
  testId: "Test ID",
  expectedBehavior: "Expected Behavior",
  noErrorMessage: "No error message",
  never: "Never",
  summary: "Summary",
  totalFailed: "Total Failed",
  mostCommonErrors: "Most Common Errors",
  testSuitesAffected: "Test Suites Affected",
  pleaseAnalyze: "Please analyze these failures and provide fixes for the most critical issues.",
  various: "Various",
  copiedFailedTests: "Copied {count} failed tests to clipboard!",
  pasteToClaudeCode: "You can now paste this data to Claude Code for analysis.",
  copyFailedTestsToClipboard: "Copy failed test details to clipboard for Claude Code analysis",
  na: "N/A",
  unknown: "Unknown",

  // Delete functionality
  delete: "Delete",
  deleteConfirmTitle: "Confirm Delete",
  deleteAccountConfirm: "Are you sure you want to delete this account?",
  deleteTransactionConfirm: "Are you sure you want to delete this transaction?",
  deleteProductConfirm: "Are you sure you want to delete this tag?",
  deleteCategoryConfirm: "Are you sure you want to delete this transaction type?",
  deleteSubcategoryConfirm: "Are you sure you want to delete this category?",
  deleteTransactionGroupConfirm: "Are you sure you want to delete this transaction group?",
  deleteCannotDelete: "Cannot delete: This record is used in transactions",
  deleteSuccess: "Record deleted successfully",
  deleteError: "Error deleting record",
  
  // Account Types Tooltip
  accountTypesExplained: "Account Types Explained",
  assetDescription: "Resources you own (Cash, Savings, House, Car, Investments)",
  liabilityDescription: "Debts you owe (Credit Cards, Loans, Mortgage)",
  equityDescription: "Your net worth (Assets minus Liabilities)",
  incomeDescription: "Money you receive (Salary, Dividends, Interest, Gifts)",
  expenseDescription: "Money you spend (Groceries, Rent, Entertainment, Gas)",
  personalFinancePrinciple: "Personal finance principle: Assets = Liabilities + Net Worth",

  // Help Panel
  help: "Help",
  support: "Support",
  releaseNotes: "Release Notes",
  viewReleaseNotes: "View Release Notes",
  viewSupport: "View Support",
  supportTitle: "Support & Help",
  contactInfo: "Contact Information",
  supportHours: "Support Hours",
  supportHoursText: "Monday - Friday: 9:00 AM - 6:00 PM EST",
  quickHelp: "Quick Help",
  addingTransactions: "Adding Transactions",
  addingTransactionsHelp: "Use the Add Transaction tab to create new financial entries with proper double-entry bookkeeping",
  managingAccounts: "Managing Accounts",
  managingAccountsHelp: "Go to Data Management > Accounts to add, edit, or remove your financial accounts",
  categoriesHelp: "Organize your transactions using transaction types and subcategories for better tracking",
  doubleEntry: "Double Entry",
  doubleEntryHelp: "Every transaction requires both a debit and credit account to maintain balanced books",
  reportBug: "Report a Bug",
  reportBugText: "Found an issue? Let us know and we'll fix it as soon as possible.",
  reportIssue: "Report Issue",
  latest: "Latest",
  categorySystemImplemented: "Complete category and subcategory system implemented",
  frenchLocalizationImproved: "Improved French localization throughout the application",
  uiEnhancements: "UI enhancements and better user experience",
  bugFixesGeneral: "Various bug fixes and performance improvements",
  foreignKeyRelationships: "Foreign key relationships between all data entities",
  improvedReporting: "Improved reporting and data visualization",
  betterDataValidation: "Better data validation and error handling",
  initialRelease: "Initial release of the personal finance tracker",
  doubleEntryBookkeeping: "Double-entry bookkeeping system",
  excelFileStorage: "Excel file-based storage system",
  bilingualSupport: "Bilingual support (English/French)",

  // Transaction Form Sections
  transactionDetails: "Transaction Details",
  categorization: "Transaction Type",
  accountMovement: "Account Movement",
  additionalDetails: "Additional Details",
  optional: "Optional",

  // Architecture Page
  architecture: "Architecture",
  databaseArchitecture: "Database Architecture",
  architectureDescription: "Visual representation of the database structure, tables, and relationships",
  tables: "Tables",
  foreignKeys: "Foreign Keys",
  relationships: "Relationships",
  fields: "Fields",
  accountTypes: "Account Types",
  designPrinciples: "Design Principles",
  relationalIntegrity: "Relational Integrity",
  relationalIntegrityDesc: "All foreign key relationships are validated to maintain data consistency",
  doubleEntryDesc: "Every transaction affects exactly two accounts (debit and credit) to maintain balanced books",
  fileBasedStorage: "File-Based Storage",
  fileBasedStorageDesc: "Data is stored in Excel files for easy access and portability",
  normalization: "Data Normalization",
  normalizationDesc: "Database is properly normalized to reduce redundancy and improve data integrity",
  implementationNotes: "Implementation Notes",
  excelStorage: "Excel File Storage",
  excelStorageNote: "Each table is stored as a separate Excel file, allowing for easy backup and data portability while maintaining relationships through foreign keys.",
  foreignKeyValidation: "Foreign Key Validation",
  foreignKeyValidationNote: "All foreign key references are validated at runtime to ensure data integrity. Invalid references are prevented from being saved.",
  doubleEntryBookkeepingNote: "The system enforces double-entry bookkeeping principles where every transaction must have matching debit and credit entries.",
  dataConsistency: "Data Consistency",
  dataConsistencyNote: "The application maintains data consistency through validation rules, foreign key constraints, and automatic balance calculations.",
  expandAll: "Expand All",
  collapseAll: "Collapse All",
  printMode: "Print Mode",
  print: "Print",
  exitPrintMode: "Exit Print Mode",

  // Settings & Formatting
  customizePreferences: "Customize your application preferences and display options",
  numberCurrency: "Number & Currency",
  data: "Data",
  import: "Import",

  // Currency Formatting
  currencyFormattingSettings: "💰 Currency Formatting Settings",
  selectCurrencyToConfigure: "Select currency to configure:",
  formatSettingsFor: "📋 Format settings for",
  usFormat: "🇺🇸 US Format",
  euFormat: "🇪🇺 EU Format",
  ukFormat: "🇬🇧 UK Format", 
  cryptoFormat: "🪙 Crypto Format",
  currencySymbolPosition: "Currency symbol position:",
  negativeNumberDisplay: "Negative number display:",
  largeNumberNotation: "Large number notation:",
  currencyCodeDisplay: "Currency code display:",
  positiveNumbers: "Positive numbers:",
  negativeNumbers: "Negative numbers:",
  largeNumbers: "Large numbers:",
  smallNumbers: "Small numbers:",

  // Date & Time Settings
  dateTimePreferences: "Date & Time Preferences",
  timeFormat: "Time Format",
  hour24: "24-hour",
  hour12: "12-hour",
  currentDateTime: "Current Date & Time",
  time: "Time:",
  datePreferencesSaved: "Date preferences saved successfully!",

  // Multi-Currency Features
  currencies: "Currencies",
  currency: "Currency",
  currencyCode: "Currency Code",
  currencyName: "Currency Name",
  currencySymbol: "Currency Symbol",
  currencyType: "Currency Type",
  decimalPlaces: "Decimal Places",
  isActive: "Is Active",
  baseCurrency: "Base Currency",
  exchangeRate: "Exchange Rate",
  exchangeRates: "Exchange Rates",
  fromCurrency: "From Currency",
  toCurrency: "To Currency",
  rate: "Rate",
  rateDate: "Rate Date",
  source: "Source",
  manual: "Manual",
  api: "API",
  calculated: "Calculated",
  fiat: "Fiat",
  crypto: "Cryptocurrency",
  selectCurrency: "Select Currency",
  addCurrency: "Add Currency",
  updateCurrency: "Update Currency",
  addExchangeRate: "Add Exchange Rate",
  updateExchangeRate: "Update Exchange Rate",
  deleteCurrencyConfirm: "Are you sure you want to delete this currency?",
  deleteExchangeRateConfirm: "Are you sure you want to delete this exchange rate?",
  currencySettings: "Currency Settings",
  autoUpdateRates: "Auto Update Rates",
  rateUpdateFrequency: "Rate Update Frequency",
  daily: "Daily",
  hourly: "Hourly",
  lastRateUpdate: "Last Rate Update",
  portfolioSummary: "Portfolio Summary",
  totalPortfolioValue: "Total Portfolio Value",
  currencyBreakdown: "Currency Breakdown",
  originalAmount: "Original Amount",
  convertedAmount: "Converted Amount",
  currencyAccounts: "accounts",
  amountInBaseCurrency: "Amount in base currency",
  primaryAmount: "Primary Amount",
  multiCurrencyTransaction: "Multi-Currency Transaction",
  crossCurrencyWarning: "This transaction involves different currencies",
  exchangeRateUsed: "Exchange rate used",
  conversionNote: "Conversion based on current exchange rates",
  notSet: "Not set",
  
  // Data Settings
  dataManagement: "Data Management",
  dataManagementDesc: "Manage your database and create backups of your financial data",
  storageBackup: "Storage & Backup",
  storageBackupDesc: "Create a complete backup of your financial database",
  createBackup: "Create Backup",
  creatingBackup: "Creating Backup...",
  backupCreated: "Backup created successfully",
  backupError: "Error creating backup",
  databaseTables: "Database Tables",
  estimatedBackupSize: "Estimated Backup Size",
  backupFormat: "Format",
  backupContents: "Contents",
  allExcelFiles: "All Excel database files + metadata",
  whatsIncluded: "What's Included in the Backup:",
  accountData: "All account data and balances",
  transactionHistory: "Complete transaction history",
  categoriesData: "Transaction categories and subcategories",
  currencySettings: "Currency settings and exchange rates",
  userPreferences: "User preferences and formatting",
  tagsGroups: "Tags and transaction groups",
  databaseMetadata: "Database metadata and structure",
  backupTips: "Backup Tips:",
  regularBackups: "Create regular backups before making major changes",
  multipleLocations: "Store backups in multiple locations (cloud storage, external drive)",
  testRestores: "Test restore procedures periodically",
  dateNaming: "Keep backup files named with dates for easy organization",
  encryptBackups: "Consider encrypting backups containing sensitive financial data",
  
  // Special Features
  allocateCashWithdrawal: "Allocate Cash Withdrawal",
  totalWithdrawal: "Total Withdrawal:",
  totalAllocated: "Total Allocated:",
  unallocated: "Unallocated:",
  allocations: "Allocations",
  whatWasThisFor: "What was this for?",
  addAllocation: "+ Add Allocation",
  saveAllocations: "Save Allocations",
  totalAllocatedExceeds: "Total allocated amount ({allocated}) exceeds withdrawal amount ({withdrawal})",
  completeAllocationRows: "Please complete all allocation rows with amounts",
  automaticAllocation: "Automatic allocation for unallocated cash",

  // Prepaid Expense Modal
  cannotMarkAsPrepaid: "Cannot Mark as Prepaid",
  transfersCannotBePrepaid: "Transfer transactions cannot be marked as prepaid expenses.",
  close: "Close",
  configurePrepaidExpense: "Configure Prepaid Expense",
  recognitionMethod: "Recognition Method",
  selectRecognitionMethod: "Select recognition method...",
  deferExpense: "Defer expense",
  amortizeExpense: "Amortize expense",
  deferAndAmortize: "Defer and amortize",
  deferExpenseTitle: "Defer expense",
  deferExpenseText: "The full amount will be recognized as an expense on the service start date. Use this for advance payments for services that will be consumed at a specific future date.",
  amortizeExpenseTitle: "Amortize expense", 
  amortizeExpenseText: "The amount will be spread evenly from the transaction date to the service end date. Recognition starts immediately after payment.",
  deferAndAmortizeTitle: "Defer and amortize",
  deferAndAmortizeText: "The amount will be spread evenly over the specified service period only. No recognition occurs before the service start date.",
  serviceStartDate: "Service Start Date",
  serviceEndDate: "Service End Date",
  serviceStartDateRequired: "Service start date is required",
  serviceEndDateRequired: "Service end date is required",
  removePrepaidStatus: "Remove Prepaid Status",
  apply: "Apply",

  // Application Reset
  applicationReset: "Application Reset",
  resetWarning: "Warning! This will reset your database to initial state, exactly like creating a new database. This action is not reversible!",
  deleteAllData: "Reset to Initial State",
  dataDeletionWarning: "Database Reset Warning",
  deletionWillRemove: "This action will reset the database and restore:",
  allAccountsBalances: "Fresh default account and zero balances",
  allTransactionHistory: "Empty transaction history", 
  allCategoriesSubcategories: "Default transaction categories and subcategories",
  allTransactionTypes: "Default transaction types and groups",
  allTagsCustomData: "Empty tags and custom data",
  onlySystemSettings: "All system data will be reset to factory defaults, including currencies and all configurations.",
  finalWarning: "Final Warning",
  deleteAllConfirmation: "Warning! By clicking 'RESET DATABASE', you will reset your database to initial state exactly like creating a new database. This action is not reversible.",
  typeCodeToConfirm: "Type the following code to confirm:",
  enterCodeAbove: "Enter the code above", 
  typeWordAbove: "Type the word above",
  deleteAll: "RESET DATABASE",
  deleting: "Resetting...",
  dataDeletedSuccess: "Database has been successfully reset to initial state.",
  errorDeletingData: "Error deleting data. Please try again.",

  // Navigation & UI Elements
  personalTracker: "Personal Tracker",
  
  // Filter & Search Controls
  allAccounts: "All Accounts",
  allTransactionTypes: "All Transaction Types", 
  allTransactionGroups: "All Transaction Groups",
  allCategories: "All Categories",
  allRefs: "All Refs",
  allTags: "All Tags",
  fromDate: "From date",
  toDate: "To date",
  minAmount: "Min amount",
  maxAmount: "Max amount",
  filterByTag: "Filter by tag",
  searchTransactions: "Search transactions...",

  // Action Controls
  selected: "selected",
  deselectAll: "Deselect All",
  selectReady: "Select Ready",
  readyTransactions: "Ready",
  errorTransactions: "Errors",
  duplicateTransactions: "Duplicates",

  // Additional Missing Keys
  back: "← Back",
  ref: "Ref:",
  selectColumn: "Select column...",
  requiredFields: "Required fields",
  optionalFields: "Optional fields",
  previewTransactions: "Preview transactions"
};